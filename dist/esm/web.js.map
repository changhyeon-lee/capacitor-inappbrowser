{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAU5C,MAAM,OAAO,eAAgB,SAAQ,SAAS;IAC5C,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACD,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,OAAoB;QAC7B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAA2B;QAC5C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO;IACT,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAyB;QACxC,oCAAoC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAA2B;QAC3C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAE,IAAI,EAAoB;QAC5C,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO;IACT,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,OAAwB;QACnC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO;IACT,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO;IACT,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,OAA4B;QAC5C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\r\n\r\nimport type {\r\n  InAppBrowserPlugin,\r\n  OpenWebViewOptions,\r\n  OpenOptions,\r\n  GetCookieOptions,\r\n  ClearCookieOptions,\r\n} from \"./definitions\";\r\n\r\nexport class InAppBrowserWeb extends WebPlugin implements InAppBrowserPlugin {\r\n  clearAllCookies(): Promise<any> {\r\n    console.log(\"clearAllCookies\");\r\n    return Promise.resolve();\r\n  }\r\n  clearCache(): Promise<any> {\r\n    console.log(\"clearCache\");\r\n    return Promise.resolve();\r\n  }\r\n  async open(options: OpenOptions): Promise<any> {\r\n    console.log(\"open\", options);\r\n    return options;\r\n  }\r\n\r\n  async clearCookies(options: ClearCookieOptions): Promise<any> {\r\n    console.log(\"cleanCookies\", options);\r\n    return;\r\n  }\r\n\r\n  async getCookies(options: GetCookieOptions): Promise<any> {\r\n    // Web implementation to get cookies\r\n    return options;\r\n  }\r\n\r\n  async openWebView(options: OpenWebViewOptions): Promise<any> {\r\n    console.log(\"openWebView\", options);\r\n    return options;\r\n  }\r\n\r\n  async executeScript({ code }: { code: string }): Promise<any> {\r\n    console.log(\"code\", code);\r\n    return code;\r\n  }\r\n\r\n  async close(): Promise<any> {\r\n    console.log(\"close\");\r\n    return;\r\n  }\r\n\r\n  async setUrl(options: { url: string }): Promise<any> {\r\n    console.log(\"setUrl\", options.url);\r\n    return;\r\n  }\r\n\r\n  async reload(): Promise<any> {\r\n    console.log(\"reload\");\r\n    return;\r\n  }\r\n  async postMessage(options: Record<string, any>): Promise<any> {\r\n    console.log(\"postMessage\", options);\r\n    return options;\r\n  }\r\n}\r\n"]}